{
  "engineId": "3b3e4a3b-d382-4e98-9950-9b4e8b308c1c",
  "rdbmsId": "751d5f2c-3043-4ceb-9a6d-78d23fbfe134",
  "insightName": "Test Graph - 0",
  "layout": "panel",
  "hidden": true,
  "recipe": [
    "AddPanel ( 0 ) ;",
    "Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 0 ) | SetPanelView ( \"pipeline\" , \"\u003cencode\u003e{\"app_id\":\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"}\u003c/encode\u003e\" ) ;",
    "AddPanel ( 0 ) ;",
    "Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 0 ) | SetPanelView ( \"pipeline\" , \"\u003cencode\u003e{\"app_id\":\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"}\u003c/encode\u003e\" ) ;",
    "AddPanel ( 0 ) ;",
    "Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 0 ) | SetPanelView ( \"pipeline\" , \"\u003cencode\u003e{\"app_id\":\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"}\u003c/encode\u003e\" ) ;",
    "Database ( database \u003d [ \"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\" ] ) | Query ( \"\u003cencode\u003eSELECT server_ip as \u0027Source\u0027,remote_ip as \u0027Target\u0027,connectionDirection as \u0027ConnectionDirection\u0027,port_used as \u0027SourcePort\u0027,remote_port as \u0027RemotePort\u0027,business_application as \u0027SourceBA\u0027,\r\nremote_business_application as \u0027TargetBA\u0027,protocol as \u0027Protocol\u0027,subnet as \u0027Subnet\u0027,environment as\u0027Environment\u0027,location as \u0027Location\u0027 FROM atadata_db.affinityview where connectionDirection\u003d \"Outbound\" or connectionDirection\u003d\"Internal\"\r\nunion\r\nSELECT remote_ip as \u0027Source\u0027,server_ip as \u0027Target\u0027,connectionDirection as \u0027ConnectionDirection\u0027,remote_port as \u0027SourcePort\u0027,port_used as \u0027RemotePort\u0027,remote_business_application as \u0027SourceBA\u0027,\r\nbusiness_application as \u0027TargetBA\u0027,protocol as \u0027Protocol\u0027,subnet as \u0027Subnet\u0027,environment as\u0027Environment\u0027,location as \u0027Location\u0027 FROM atadata_db.affinityview where connectionDirection\u003d \"Inbound\"\u003c/encode\u003e\" ) | Import ( frame \u003d [ CreateFrame ( frameType \u003d [ R ] , override \u003d [ true ] ) .as ( [ \"AFFINITYGRAPHFRAME\" ] ) ] ) ;",
    "AFFINITYGRAPHFRAME | SplitUnpivot ( columns \u003d [ \"SourcePort\" ] , delimiter \u003d [ \";\" ] ) ;",
    "AFFINITYGRAPHFRAME | SplitUnpivot ( columns \u003d [ \"RemotePort\" ] , delimiter \u003d [ \";\" ] ) ;",
    "AFFINITYGRAPHFRAME | ReplaceColumnValue ( column \u003d [ \"SourceBA\" ] , value \u003d [ \"\" ] , newValue \u003d [ \"Unknown\" ] ) ;",
    "AFFINITYGRAPHFRAME | UpdateRowValues ( SourceBA , \"Unknown\" , Filter ( SourceBA \u003d\u003d \"null\" ) ) ;",
    "AFFINITYGRAPHFRAME | ReplaceColumnValue ( column \u003d [ \"TargetBA\" ] , value \u003d [ \"\" ] , newValue \u003d [ \"Unknown\" ] ) ;",
    "AFFINITYGRAPHFRAME | UpdateRowValues ( TargetBA , \"Unknown\" , Filter ( TargetBA \u003d\u003d \"null\" ) ) ;",
    "AFFINITYGRAPHFRAME | ReplaceColumnValue ( column \u003d [ \"Subnet\" ] , value \u003d [ \"\" ] , newValue \u003d [ \"Unknown\" ] ) ;",
    "AFFINITYGRAPHFRAME | UpdateRowValues ( Subnet , \"Unknown\" , Filter ( Subnet \u003d\u003d \"null\" ) ) ;",
    "AFFINITYGRAPHFRAME | ReplaceColumnValue ( column \u003d [ \"Location\" ] , value \u003d [ \"\" ] , newValue \u003d [ \"Unknown\" ] ) ;",
    "AFFINITYGRAPHFRAME | UpdateRowValues ( Environment , \"Unknown\" , Filter ( Environment \u003d\u003d \"null\" ) ) ;",
    "Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"standard\"}\u003c/encode\u003e\" ) ;",
    "Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"connections\" : \"source.target;\" , \"alias\" : \"source.source;target.source\" , \"color\" : \"FF0000\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ;",
    "Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.displayValues\" ) ;",
    "AddPanel ( 1 ) ;",
    "Panel ( 1 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 1 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 1 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Source\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 2 ) ;",
    "Panel ( 2 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"subType\" : \"UNFILTER\" , \"opacity\" : 100 , \"labelOverride\" : true , \"panelLabel\" : \"Unfilter Sheet\" , \"zIndex\" : 4 } } ] ) ;",
    "Panel ( 2 ) | SetPanelView ( \"unfilter-sheet\" ) ;",
    "AddPanel ( 3 ) ;",
    "Panel ( 3 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 3 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 3 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Target\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 4 ) ;",
    "Panel ( 4 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 4 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 4 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"SourcePort\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 5 ) ;",
    "Panel ( 5 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 5 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 5 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"RemotePort\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 6 ) ;",
    "Panel ( 6 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 6 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 6 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Protocol\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 7 ) ;",
    "Panel ( 7 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 7 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 7 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Location\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 8 ) ;",
    "Panel ( 8 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 8 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 8 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"SourceBA\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 9 ) ;",
    "Panel ( 9 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 9 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 9 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"TargetBA\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 10 ) ;",
    "Panel ( 10 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 10 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 10 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Subnet\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 11 ) ;",
    "Panel ( 11 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"COLLAPSIBLE\" , \"opacity\" : 100 , \"subType\" : \"\" } } ] ) ;",
    "Panel ( 11 ) | SetPanelView ( \"DashboardFilter\" , \"\u003cencode\u003e{\"autoRun\":true,\"frame\":\"AFFINITYGRAPHFRAME\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 11 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Multi Select\" , \"viewType\" : \"List\" , \"instances\" : [ \"Environment\" ] } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;",
    "AddPanel ( 15 ) ;",
    "Panel ( 15 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;",
    "Panel ( 15 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;",
    "Panel ( 15 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"standard\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 15 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Server\" : [ { \"panel\" : \"0\" , \"query\" : \"\u003cencode\u003eAFFINITYGRAPHFRAME | SetFrameFilter(Source\u003d\u003d\u003cSelectedValues\u003e OR Target\u003d\u003d\u003cSelectedValues\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"disabledVisuals\" : [ \"Sunburst\" ] } ] } } ) ;",
    "Database ( database \u003d [ \"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\" ] ) | Query ( \"\u003cencode\u003eselect distinct server_ip as \u0027Source\u0027 from affinityview where connectionDirection !\u003d \"Unknown\"\u003c/encode\u003e\" ) | Import ( frame \u003d [ CreateFrame ( frameType \u003d [ R ] , override \u003d [ true ] ) .as ( [ \"ServerListFrame\" ] ) ] ) ;",
    "Frame ( frame \u003d [ ServerListFrame ] ) | Select ( Source ) .as ( [ Source ] ) | With ( Panel ( 15 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"15\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Source\" ] } } } ) | Collect ( 2000 ) ;",
    "Panel ( 0 ) | SetPanelLabel ( \"Affinity Network Graph\" ) ;",
    "Panel ( 1 ) | SetPanelLabel ( \"Filter Outbound Connections\" ) ;",
    "Panel ( 3 ) | SetPanelLabel ( \"Filter Inbound Connections\" ) ;",
    "Panel ( 4 ) | SetPanelLabel ( \"Filter Source Port\" ) ;",
    "Panel ( 5 ) | SetPanelLabel ( \"Filter Target Port\" ) ;",
    "Panel ( 6 ) | SetPanelLabel ( \"Filter Protocol\" ) ;",
    "Panel ( 7 ) | SetPanelLabel ( \"Filter Location\" ) ;",
    "Panel ( 8 ) | SetPanelLabel ( \"Filter Source Business Application\" ) ;",
    "Panel ( 9 ) | SetPanelLabel ( \"Filter Target Business Application\" ) ;",
    "Panel ( 10 ) | SetPanelLabel ( \"Filter Subnet\" ) ;",
    "Panel ( 11 ) | SetPanelLabel ( \"Filter Environment\" ) ;",
    "Panel ( 15 ) | SetPanelLabel ( \"IPs\" ) ;",
    "Panel ( 15 ) | SetPanelPosition ( { \"top\" : 15 , \"left\" : 87 , \"width\" : 12 , \"height\" : 85 } ) ;",
    "Panel ( 0 ) | SetPanelPosition ( { \"top\" : 15 , \"left\" : 0 . 2 , \"width\" : 86 . 5 , \"height\" : 85 } ) ;",
    "AFFINITYGRAPHFRAME | SetFrameFilter ( Source \u003d\u003d [ \"192.168.113.203\" ]  OR  Target \u003d\u003d [ \"192.168.113.203\" ] ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ ServerListFrame ] ) | Select ( Source ) .as ( [ Source ] ) | With ( Panel ( 15 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"15\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Source\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "AFFINITYGRAPHFRAME | SetFrameFilter ( Source \u003d\u003d [ \"192.168.113.115\" ]  OR  Target \u003d\u003d [ \"192.168.113.115\" ] ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ AFFINITYGRAPHFRAME ] ) | Select ( Source , Target ) .as ( [ source , target ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"color\" : \"FF0000\" , \"alias\" : \"source.source;target.source\" , \"connections\" : \"source.target;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"source\" ] , \"end\" : [ \"target\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "ifError ( ( Frame ( frame \u003d [ ServerListFrame ] ) | Select ( Source ) .as ( [ Source ] ) | With ( Panel ( 15 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"15\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Source\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;",
    "( AFFINITYGRAPHFRAME | UnfilterFrame ( Source ) ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onHover\" : { \"Tooltip\" : [ { \"panel\" : \"0\" , \"query\" : \"\u003cencode\u003eMETA | OpenInsight(app\u003d[\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"], id\u003d[\"4ef5606d-eee9-4aba-b921-34b6dde86d3f\"]);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"disabledVisuals\" : [ ] } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onHover\" : { \"Tooltip\" : [ { \"panel\" : \"0\" , \"query\" : \"\u003cencode\u003eMETA | OpenInsight(app\u003d[\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"], id\u003d[\"4ef5606d-eee9-4aba-b921-34b6dde86d3f\"]);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"disabledVisuals\" : [ ] } ] } } ) ;",
    "Panel ( 0 ) | RemovePanelEvents ( \"onHover.Tooltip\" ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eMETA | OpenInsight(app\u003d[\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"], id\u003d[\"4ef5606d-eee9-4aba-b921-34b6dde86d3f\"]);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eMETA | OpenInsight(app\u003d[\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"], id\u003d[\"4ef5606d-eee9-4aba-b921-34b6dde86d3f\"],params\u003d\"192.168.100.238\");\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eAddPanel ( 20 ) ;\nPanel ( 20 ) | SetPanelView ( \"html-widget\" ) ;\nPanel ( 20 ) | SetPanelView ( \"html-widget\" , \"\u003cencode\u003e{\"path\":\"serverInfo.html\",\"space\":\"\"}\u003c/encode\u003e\" ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 500 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 320 , \"height\" : 50 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 50 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 25 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 30 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 335 } ) ;\nPanel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 35 } ) ;\nPanel ( 20 ) | SetPanelLabel ( \"Server Information\" ) ;\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] } ] } } ) ;",
    "Panel ( 0 ) | RetrievePanelEvents ( ) ;",
    "AddPanel ( 20 ) ;",
    "Panel ( 20 ) | SetPanelView ( \"html-widget\" ) ;",
    "Panel ( 20 ) | SetPanelView ( \"html-widget\" , \"\u003cencode\u003e{\"path\":\"serverInfo.html\",\"space\":\"\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 500 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 320 , \"height\" : 50 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 50 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 25 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 30 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 335 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 35 } ) ;",
    "Panel ( 20 ) | SetPanelLabel ( \"Server Information\" ) ;",
    "ClosePanel ( 20 ) ;",
    "AddPanel ( 20 ) ;",
    "Panel ( 20 ) | SetPanelView ( \"html-widget\" ) ;",
    "Panel ( 20 ) | SetPanelView ( \"html-widget\" , \"\u003cencode\u003e{\"path\":\"serverInfo.html\",\"space\":\"\"}\u003c/encode\u003e\" ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 500 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 30 , \"height\" : 20 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 320 , \"height\" : 50 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 50 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 25 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 30 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 335 } ) ;",
    "Panel ( 20 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 65 , \"width\" : 20 , \"height\" : 35 } ) ;",
    "Panel ( 20 ) | SetPanelLabel ( \"Server Information\" ) ;",
    "ClosePanel ( 20 ) ;",
    "Panel(0)|SetPanelPosition({\"top\":15,\"left\":0.2,\"width\":86.5,\"height\":85});",
    "Panel(1)|SetPanelPosition({\"top\":0,\"left\":5,\"width\":20,\"height\":5});",
    "Panel(2)|SetPanelPosition({\"top\":0,\"left\":0,\"width\":5,\"height\":5});",
    "Panel(3)|SetPanelPosition({\"top\":0,\"left\":25,\"width\":25,\"height\":5});",
    "Panel(4)|SetPanelPosition({\"top\":0,\"left\":50,\"width\":25,\"height\":5});",
    "Panel(5)|SetPanelPosition({\"top\":0,\"left\":75,\"width\":25,\"height\":5});",
    "Panel(6)|SetPanelPosition({\"top\":5,\"left\":0,\"width\":25,\"height\":5});",
    "Panel(7)|SetPanelPosition({\"top\":5,\"left\":25,\"width\":25,\"height\":5});",
    "Panel(8)|SetPanelPosition({\"top\":5,\"left\":50,\"width\":25,\"height\":5});",
    "Panel(9)|SetPanelPosition({\"top\":5,\"left\":75,\"width\":25,\"height\":5});",
    "Panel(10)|SetPanelPosition({\"top\":10,\"left\":0,\"width\":50,\"height\":5});",
    "Panel(11)|SetPanelPosition({\"top\":10,\"left\":50,\"width\":50,\"height\":5});",
    "Panel(15)|SetPanelPosition({\"top\":15,\"left\":87,\"width\":12,\"height\":85});"
  ]
}