{
  "layout": "panel",
  "rdbmsId": "7abb3a95-e186-4fd2-b86c-b07dad5dbfdb",
  "hidden": true,
  "insightName": "Inventory Insights 031720 - 0",
  "recipe": "AddPanel ( 0 ) ; Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ; Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ; Panel ( 0 ) | RetrievePanelEvents ( ) ; Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ; Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"app_id\":\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"}\u003c/encode\u003e\" ) ; CreateFrame ( GRID ) .as ( [ \u0027FRAME767432\u0027 ] ) ; Database ( database \u003d [ \"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\" ] ) | Query ( \"\u003cencode\u003eselect * from server_details sd\n    left outer join operating_systems ops on ops.ID \u003d sd.operating_system_ID\nleft outer join platforms plt on plt.ID \u003d sd.platform_ID \nleft outer join server_environment_master env on env.ID \u003d sd.environment_ID\u003c/encode\u003e\" ) | Import ( frame \u003d [ FRAME767432 ] ) ; Panel ( 0 ) | SetPanelView ( \"visualization\" ) ; Frame ( frame \u003d [ FRAME767432 ] ) | QueryAll ( ) | AutoTaskOptions ( panel \u003d [ \"0\" ] , layout \u003d [ \"Grid\" ] ) | Collect ( 2000 ) ; Panel ( 0 ) | SetPanelView ( \"federate-view\" ) ; Panel ( 0 ) | SetPanelView ( \"pipeline\" ) ; FileRead ( filePath \u003d [ \"APP_FOLDER\\INSIGHT_FOLDER\\data\\location (1).csv\" ] , dataTypeMap \u003d [ { \"location\" : \"STRING\" , \"lat\" : \"DOUBLE\" , \"lng\" : \"DOUBLE\" } ] , delimiter \u003d [ \",\" ] , newHeaders \u003d [ { \"location\" : \"Location\" , \"lat\" : \"Lat\" , \"lng\" : \"Long\" } ] , fileName \u003d [ \"location (1).csv\" ] , additionalDataTypes \u003d [ { } ] )  | Select ( DND__location , DND__lat , DND__lng ) .as ( [ location , lat , lng ] ) | Import ( frame \u003d [ CreateFrame ( frameType \u003d [ GRID ] , override \u003d [ false ] ) .as ( [ \"FRAME370362\" ] ) ] ) ; Frame ( FRAME767432 ) | Select ( FRAME767432__auth_profile , FRAME767432__business_application , FRAME767432__created_by , FRAME767432__created_date , FRAME767432__DATABASE_CREDENTIAL_ID , FRAME767432__DESCRIPTION , FRAME767432__DISPLAY_NAME , FRAME767432__ENDPOINT_URL , FRAME767432__ENVIRONMENT , FRAME767432__environment_ID , FRAME767432__hostname , FRAME767432__ID , FRAME767432__ID_1 , FRAME767432__ID_2 , FRAME767432__ID_3 , FRAME767432__INFRASTRUCTURE , FRAME767432__IS_ACTIVE , FRAME767432__is_deleted , FRAME767432__Is_Manual , FRAME767432__location , FRAME767432__mapping_source_server_ID , FRAME767432__modified_by , FRAME767432__modified_date , FRAME767432__move_group_id , FRAME767432__OPERATING_SYSTEM , FRAME767432__OPERATING_SYSTEMS_IMAGE , FRAME767432__operating_system_ID , FRAME767432__output_path , FRAME767432__PLATFORM , FRAME767432__platform_ID , FRAME767432__PLATFORM_IMAGE , FRAME767432__reparse_requested , FRAME767432__report_run_date , FRAME767432__report_run_end_date , FRAME767432__server_ip , FRAME767432__storagetemplate_ID , FRAME767432__type , FRAME767432__validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | Merge ( joins \u003d [ ( location , right.outer.join , location ) ] , frame \u003d [ FRAME370362 ] ) ; RemoveFrame ( \"FRAME767432\" ) ; Panel ( 0 ) | SetPanelView ( \"visualization\" ) ; Frame ( frame \u003d [ FRAME370362 ] ) | QueryAll ( ) | AutoTaskOptions ( panel \u003d [ \"0\" ] , layout \u003d [ \"Grid\" ] ) | Collect ( 2000 ) ; FRAME370362 | Convert ( frameType \u003d [ R ] ) .as ( [ \u0027FRAME370362\u0027 ] ) ; Frame ( frame \u003d [ FRAME370362 ] ) | Select ( auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_date\" , \"DATABASE_CREDENTIAL_ID\" , \"DESCRIPTION\" , \"DISPLAY_NAME\" , \"ENDPOINT_URL\" , \"ENVIRONMENT\" , \"environment_ID\" , \"hostname\" , \"ID\" , \"ID_1\" , \"ID_2\" , \"ID_3\" , \"INFRASTRUCTURE\" , \"IS_ACTIVE\" , \"is_deleted\" , \"Is_Manual\" , \"lat\" , \"lng\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_date\" , \"move_group_id\" , \"OPERATING_SYSTEM\" , \"OPERATING_SYSTEMS_IMAGE\" , \"operating_system_ID\" , \"output_path\" , \"PLATFORM\" , \"platform_ID\" , \"PLATFORM_IMAGE\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_ip\" , \"storagetemplate_ID\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ; FRAME370362 | DropRows ( qs \u003d [ Filter ( is_deleted \u003d\u003d \"1\" ) ] ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_date\" , \"DATABASE_CREDENTIAL_ID\" , \"DESCRIPTION\" , \"DISPLAY_NAME\" , \"ENDPOINT_URL\" , \"ENVIRONMENT\" , \"environment_ID\" , \"hostname\" , \"ID\" , \"ID_1\" , \"ID_2\" , \"ID_3\" , \"INFRASTRUCTURE\" , \"IS_ACTIVE\" , \"is_deleted\" , \"Is_Manual\" , \"lat\" , \"lng\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_date\" , \"move_group_id\" , \"OPERATING_SYSTEM\" , \"OPERATING_SYSTEMS_IMAGE\" , \"operating_system_ID\" , \"output_path\" , \"PLATFORM\" , \"platform_ID\" , \"PLATFORM_IMAGE\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_ip\" , \"storagetemplate_ID\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"standard\"}\u003c/encode\u003e\" ) ; if ( ( FRAME370362 | HasDuplicates ( location ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , Average ( lat ) , Average ( lng ) ) .as ( [ location , Average_of_lat , Average_of_lng ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"Average_of_lat\" ] , \"longitude\" : [ \"Average_of_lng\" ] , \"size\" : [ ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , lat , lng ) .as ( [ location , lat , lng ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"lat\" ] , \"longitude\" : [ \"lng\" ] , \"size\" : [ ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; if ( ( FRAME370362 | HasDuplicates ( location ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , Average ( lat ) , Average ( lng ) , Count ( server_ip ) ) .as ( [ location , Average_of_lat , Average_of_lng , Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"Average_of_lat\" ] , \"longitude\" : [ \"Average_of_lng\" ] , \"size\" : [ \"Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , lat , lng , Count ( server_ip ) ) .as ( [ location , lat , lng , Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"lat\" ] , \"longitude\" : [ \"lng\" ] , \"size\" : [ \"Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; if ( ( FRAME370362 | HasDuplicates ( location ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , Average ( lat ) , Average ( lng ) , UniqueCount ( server_ip ) ) .as ( [ location , Average_of_lat , Average_of_lng , Unique_Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"Average_of_lat\" ] , \"longitude\" : [ \"Average_of_lng\" ] , \"size\" : [ \"Unique_Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , lat , lng , Count ( server_ip ) ) .as ( [ location , lat , lng , Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"lat\" ] , \"longitude\" : [ \"lng\" ] , \"size\" : [ \"Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Frame ( frame \u003d [ FRAME370362 ] ) | Select ( auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_date\" , \"DATABASE_CREDENTIAL_ID\" , \"DESCRIPTION\" , \"DISPLAY_NAME\" , \"ENDPOINT_URL\" , \"ENVIRONMENT\" , \"environment_ID\" , \"hostname\" , \"ID\" , \"ID_1\" , \"ID_2\" , \"ID_3\" , \"INFRASTRUCTURE\" , \"IS_ACTIVE\" , \"is_deleted\" , \"Is_Manual\" , \"lat\" , \"lng\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_date\" , \"move_group_id\" , \"OPERATING_SYSTEM\" , \"OPERATING_SYSTEMS_IMAGE\" , \"operating_system_ID\" , \"output_path\" , \"PLATFORM\" , \"platform_ID\" , \"PLATFORM_IMAGE\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_ip\" , \"storagetemplate_ID\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ; FRAME370362 | UpdateRowValues ( lat , \"0\" , Filter ( location \u003d\u003d \"\" ) ) ; FRAME370362 | UpdateRowValues ( lng , \"0\" , Filter ( location \u003d\u003d \"\" ) ) ; if ( ( FRAME370362 | HasDuplicates ( location ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , Average ( lat ) , Average ( lng ) , UniqueCount ( server_ip ) ) .as ( [ location , Average_of_lat , Average_of_lng , Unique_Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"Average_of_lat\" ] , \"longitude\" : [ \"Average_of_lng\" ] , \"size\" : [ \"Unique_Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( location , lat , lng , Count ( server_ip ) ) .as ( [ location , lat , lng , Count_of_server_ip ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"location\" ] , \"latitude\" : [ \"lat\" ] , \"longitude\" : [ \"lng\" ] , \"size\" : [ \"Count_of_server_ip\" ] , \"color\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 0 ) | Clone ( \"1\" ) ; Panel ( 1 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ; if ( ( FRAME370362 | HasDuplicates ( OPERATING_SYSTEM ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( OPERATING_SYSTEM , Count ( server_ip ) ) .as ( [ OPERATING_SYSTEM , Count_of_server_ip ] ) | Group ( OPERATING_SYSTEM ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"OPERATING_SYSTEM\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( OPERATING_SYSTEM , Count ( server_ip ) ) .as ( [ OPERATING_SYSTEM , Count_of_server_ip ] ) | Group ( OPERATING_SYSTEM ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"OPERATING_SYSTEM\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; if ( ( FRAME370362 | HasDuplicates ( OPERATING_SYSTEM ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( OPERATING_SYSTEM , UniqueCount ( server_ip ) ) .as ( [ OPERATING_SYSTEM , Unique_Count_of_server_ip ] ) | Group ( OPERATING_SYSTEM ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"OPERATING_SYSTEM\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( OPERATING_SYSTEM , Count ( server_ip ) ) .as ( [ OPERATING_SYSTEM , Count_of_server_ip ] ) | Group ( OPERATING_SYSTEM ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"OPERATING_SYSTEM\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 1 ) | Clone ( \"2\" ) ; if ( ( FRAME370362 | HasDuplicates ( ENVIRONMENT ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( ENVIRONMENT , UniqueCount ( server_ip ) ) .as ( [ ENVIRONMENT , Unique_Count_of_server_ip ] ) | Group ( ENVIRONMENT ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"ENVIRONMENT\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( ENVIRONMENT , Count ( server_ip ) ) .as ( [ ENVIRONMENT , Count_of_server_ip ] ) | Group ( ENVIRONMENT ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"ENVIRONMENT\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 2 ) | Clone ( \"3\" ) ; if ( ( FRAME370362 | HasDuplicates ( DISPLAY_NAME ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( DISPLAY_NAME , UniqueCount ( server_ip ) ) .as ( [ DISPLAY_NAME , Unique_Count_of_server_ip ] ) | Group ( DISPLAY_NAME ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"DISPLAY_NAME\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( DISPLAY_NAME , Count ( server_ip ) ) .as ( [ DISPLAY_NAME , Count_of_server_ip ] ) | Group ( DISPLAY_NAME ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"DISPLAY_NAME\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 3 ) | Clone ( \"4\" ) ; if ( ( FRAME370362 | HasDuplicates ( business_application ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( business_application , UniqueCount ( server_ip ) ) .as ( [ business_application , Unique_Count_of_server_ip ] ) | Group ( business_application ) | With ( Panel ( 4 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"business_application\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( business_application , Count ( server_ip ) ) .as ( [ business_application , Count_of_server_ip ] ) | Group ( business_application ) | With ( Panel ( 4 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"business_application\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 4 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleDonut\" : true } } } ) ; Panel ( 4 ) | RetrievePanelOrnaments ( \"tools.shared.toggleDonut\" ) ; Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleDonut\" : true } } } ) ; Panel ( 3 ) | RetrievePanelOrnaments ( \"tools.shared.toggleDonut\" ) ; Panel ( 2 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleDonut\" : true } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \"tools.shared.toggleDonut\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleDonut\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleDonut\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Semoss\" , \"color\" : { } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"One\" , \"color\" : { } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Semoss\" , \"color\" : { } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ; Panel ( 3 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"One\" , \"color\" : { } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ; Panel ( 3 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 0 ) | SetPanelLabel ( \"Server Inventory by Location\" ) ; Panel ( 1 ) | SetPanelLabel ( \"Server Inventory by OS Type\" ) ; Panel ( 2 ) | SetPanelLabel ( \"Server Inventory by Environment\" ) ; Panel ( 3 ) | SetPanelLabel ( \"Server Inventory by Platform\" ) ; Panel ( 4 ) | SetPanelLabel ( \"Server Inventory by Business App\" ) ; Frame ( frame \u003d [ FRAME370362 ] ) | Select ( auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_date\" , \"DATABASE_CREDENTIAL_ID\" , \"DESCRIPTION\" , \"DISPLAY_NAME\" , \"ENDPOINT_URL\" , \"ENVIRONMENT\" , \"environment_ID\" , \"hostname\" , \"ID\" , \"ID_1\" , \"ID_2\" , \"ID_3\" , \"INFRASTRUCTURE\" , \"IS_ACTIVE\" , \"is_deleted\" , \"Is_Manual\" , \"lat\" , \"lng\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_date\" , \"move_group_id\" , \"OPERATING_SYSTEM\" , \"OPERATING_SYSTEMS_IMAGE\" , \"operating_system_ID\" , \"output_path\" , \"PLATFORM\" , \"platform_ID\" , \"PLATFORM_IMAGE\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_ip\" , \"storagetemplate_ID\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ; FRAME370362 | UpdateRowValues ( business_application , \"null\" , Filter ( business_application \u003d\u003d \"\" ) ) ; if ( ( FRAME370362 | HasDuplicates ( business_application ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( business_application , UniqueCount ( server_ip ) ) .as ( [ business_application , Unique_Count_of_server_ip ] ) | Group ( business_application ) | With ( Panel ( 4 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"business_application\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( business_application , Count ( server_ip ) ) .as ( [ business_application , Count_of_server_ip ] ) | Group ( business_application ) | With ( Panel ( 4 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"business_application\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Frame ( frame \u003d [ FRAME370362 ] ) | Select ( auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_date , DATABASE_CREDENTIAL_ID , DESCRIPTION , DISPLAY_NAME , ENDPOINT_URL , ENVIRONMENT , environment_ID , hostname , ID , ID_1 , ID_2 , ID_3 , INFRASTRUCTURE , IS_ACTIVE , is_deleted , Is_Manual , lat , lng , location , mapping_source_server_ID , modified_by , modified_date , move_group_id , OPERATING_SYSTEM , OPERATING_SYSTEMS_IMAGE , operating_system_ID , output_path , PLATFORM , platform_ID , PLATFORM_IMAGE , reparse_requested , report_run_date , report_run_end_date , server_ip , storagetemplate_ID , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_date\" , \"DATABASE_CREDENTIAL_ID\" , \"DESCRIPTION\" , \"DISPLAY_NAME\" , \"ENDPOINT_URL\" , \"ENVIRONMENT\" , \"environment_ID\" , \"hostname\" , \"ID\" , \"ID_1\" , \"ID_2\" , \"ID_3\" , \"INFRASTRUCTURE\" , \"IS_ACTIVE\" , \"is_deleted\" , \"Is_Manual\" , \"lat\" , \"lng\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_date\" , \"move_group_id\" , \"OPERATING_SYSTEM\" , \"OPERATING_SYSTEMS_IMAGE\" , \"operating_system_ID\" , \"output_path\" , \"PLATFORM\" , \"platform_ID\" , \"PLATFORM_IMAGE\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_ip\" , \"storagetemplate_ID\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ; if ( ( FRAME370362 | HasDuplicates ( DISPLAY_NAME ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( DISPLAY_NAME , UniqueCount ( server_ip ) ) .as ( [ DISPLAY_NAME , Unique_Count_of_server_ip ] ) | Group ( DISPLAY_NAME ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"DISPLAY_NAME\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( DISPLAY_NAME , Count ( server_ip ) ) .as ( [ DISPLAY_NAME , Count_of_server_ip ] ) | Group ( DISPLAY_NAME ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"DISPLAY_NAME\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; Panel ( 0 ) | AddPanelEvents ( { \"onBrush\" : { \"Filter\" : [ { \"default\" : true , \"query\" : \"if((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\" , \"options\" : { } , \"refresh\" : false , \"disabled\" : true , \"panel\" : \"\" } ] } } ) ; Panel ( 0 ) | RetrievePanelEvents ( ) ; Panel ( 0 ) | AddPanelEvents ( { \"onDoubleClick\" : { \"DOUBLE-CLICK TO FILTER\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"disabledVisuals\" : [ ] } ] } } ) ; Panel ( 0 ) | RetrievePanelEvents ( ) ; ( FRAME370362 | UnfilterFrame ( location ) ) ; FRAME370362 | SetFrameFilter ( location \u003d\u003d [ \"Sydney\" ] ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( UniqueCount ( server_ip ) , Average ( lat ) , location , Average ( lng ) ) .as ( [ Unique_Count_of_server_ip , Average_of_lat , location , Average_of_lng ] ) | Group ( location ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"size\" : [ \"Unique_Count_of_server_ip\" ] , \"latitude\" : [ \"Average_of_lat\" ] , \"label\" : [ \"location\" ] , \"longitude\" : [ \"Average_of_lng\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( OPERATING_SYSTEM , UniqueCount ( server_ip ) ) .as ( [ OPERATING_SYSTEM , Unique_Count_of_server_ip ] ) | Group ( OPERATING_SYSTEM ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"OPERATING_SYSTEM\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( ENVIRONMENT , UniqueCount ( server_ip ) ) .as ( [ ENVIRONMENT , Unique_Count_of_server_ip ] ) | Group ( ENVIRONMENT ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"ENVIRONMENT\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( DISPLAY_NAME , UniqueCount ( server_ip ) ) .as ( [ DISPLAY_NAME , Unique_Count_of_server_ip ] ) | Group ( DISPLAY_NAME ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"DISPLAY_NAME\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; ifError ( ( Frame ( frame \u003d [ FRAME370362 ] ) | Select ( business_application , UniqueCount ( server_ip ) ) .as ( [ business_application , Unique_Count_of_server_ip ] ) | Group ( business_application ) | With ( Panel ( 4 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"4\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"business_application\" ] , \"value\" : [ \"Unique_Count_of_server_ip\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ; ( FRAME370362 | UnfilterFrame ( location ) ) ; Panel ( 0 ) | SetPanelPosition ( { \"top\" : 0 , \"left\" : 0 , \"width\" : 33 . 333 , \"height\" : 50 } ) ; Panel ( 1 ) | SetPanelPosition ( { \"top\" : 0 , \"left\" : 33 . 333 , \"width\" : 33 . 333 , \"height\" : 50 } ) ; Panel ( 2 ) | SetPanelPosition ( { \"top\" : 0 , \"left\" : 66 . 69069935111752 , \"width\" : 33 . 30930064888248 , \"height\" : 50 . 04574565416286 } ) ; Panel ( 3 ) | SetPanelPosition ( { \"top\" : 50 . 04574565416286 , \"left\" : 0 , \"width\" : 50 . 036049026676274 , \"height\" : 49 . 95425434583714 } ) ; Panel ( 4 ) | SetPanelPosition ( { \"top\" : 50 . 04574565416286 , \"left\" : 50 . 036049026676274 , \"width\" : 49 . 96395097332372 , \"height\" : 49 . 95425434583714 } ) ; ",
  "engineId": "3b3e4a3b-d382-4e98-9950-9b4e8b308c1c"
}