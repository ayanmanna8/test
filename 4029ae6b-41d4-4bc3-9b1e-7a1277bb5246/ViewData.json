{"insightID":"cace52e0-d72e-4842-a321-05831fd9b877","pixelReturn":[{"pixelExpression":"CachedPanel ( \"0\" ) ;","isMeta":false,"output":{"panelId":"0","panelLabel":"Discovery Status","view":"visualization","viewOptions":"{\"type\":\"echarts\"}","viewOptionsMap":{"federate-view":{"app_id":"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c"},"visualization":{"type":"echarts"}},"config":{"backgroundColor":"#FFFFFF","type":"STANDARD","opacity":100.0,"labelOverride":false,"locked":false,"transparent":false,"zIndex":1.0},"ornaments":{"tools":{"shared":{"toggleLegend":true,"backgroundColor":"#FFFFFF","watermark":"","transparentPanel":false}}},"events":{"onSingleClick":{"Unfilter":[{"disabledVisuals":["Grid","Sunburst"],"default":true,"query":"(<Frame> | UnfilterFrame(<SelectedColumn>));","options":{},"refresh":false,"disabled":false,"panel":""}]},"onBrush":{"Filter":[{"default":true,"query":"if((IsEmpty(<SelectedValues>)),(<Frame> | UnfilterFrame(<SelectedColumn>)), (<Frame> | SetFrameFilter(<SelectedColumn>==<SelectedValues>)));","options":{},"refresh":false,"disabled":false,"panel":""}]}},"comments":{},"position":{},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"1\" ) ;","isMeta":false,"output":{"panelId":"1","panelLabel":"","view":"text-widget","viewOptions":"{\"html\":\"<body>\\n    <!-- Change QueryAll() to a select statement if you do not want all headers in your default frame -->\\n    <button class=\\\"button\\\" ng-click=\\\"textWidget.runPixel('Frame () | Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );')\\\" type=\\\"button\\\" style=\\\"vertical-align:middle\\\" >\\n        <span><i class=\\\"fa fa-save\\\"></i></span>\\n    </button>\\n</body>\\n<style>\\n    #TextWidget{\\n        --button-background-color: #143F5B;\\n        --button-text-color: #ffffff;\\n    }\\n    #TextWidget .button{\\n    display: inline-block;\\n    border-radius: 4px;\\n    background-color: var(--button-background-color);\\n    border: none;\\n    color: var(--button-text-color);\\n    text-align: center;\\n    font-size: 20px;\\n    padding: 25px;\\n    width: 100%;\\n    transition: all 0.5s;\\n    cursor: pointer;\\n    margin: 5px;\\n    }\\n\\n    #TextWidget .button span{\\n    cursor: pointer;\\n    display: inline-block;\\n    position: relative;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button span:after{\\n    content: '\\\\00bb';\\n    position: absolute;\\n    opacity: 0;\\n    top: 0;\\n    right: -20px;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button:hover span{\\n    padding-right: 25px;\\n    }\\n\\n    #TextWidget .button:hover span:after{\\n    opacity: 1;\\n    right: 0;\\n    }\\n</style>\",\"varList\":[{\"name\":\"FrameData\",\"query\":\"Panel ( 0 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<body>\\\\n    <!-- Change QueryAll() to a select statement if you do not want all headers in your default frame -->\\\\n    <button class=\\\\\\\"button\\\\\\\" ng-click=\\\\\\\"textWidget.runPixel('Frame () |  Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );')\\\\\\\" type=\\\\\\\"button\\\\\\\" style=\\\\\\\"vertical-align:middle\\\\\\\" >\\\\n        <span>Download</span>\\\\n    </button>\\\\n</body>\\\\n<style>\\\\n    #TextWidget {\\\\n        --button-background-color: #143F5B;\\\\n        --button-text-color: #ffffff;\\\\n    }\\\\n    #TextWidget .button{\\\\n    display: inline-block;\\\\n    border-radius: 4px;\\\\n    background-color: var(--button-background-color);\\\\n    border: none;\\\\n    color: var(--button-text-color);\\\\n    text-align: center;\\\\n    font-size: 28px;\\\\n    padding: 20px;\\\\n    width: 100%;\\\\n    transition: all 0.5s;\\\\n    cursor: pointer;\\\\n    margin: 5px;\\\\n    }\\\\n\\\\n    #TextWidget .button span{\\\\n    cursor: pointer;\\\\n    display: inline-block;\\\\n    position: relative;\\\\n    transition: 0.5s;\\\\n    }\\\\n\\\\n    #TextWidget .button span:after{\\\\n    content: '\\\\\\\\00bb';\\\\n    position: absolute;\\\\n    opacity: 0;\\\\n    top: 0;\\\\n    right: -20px;\\\\n    transition: 0.5s;\\\\n    }\\\\n\\\\n    #TextWidget .button:hover span{\\\\n    padding-right: 25px;\\\\n    }\\\\n\\\\n    #TextWidget .button:hover span:after{\\\\n    opacity: 1;\\\\n    right: 0;\\\\n    }\\\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"\\\",\\\"query\\\":\\\"\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ;\"}],\"freeze\":false,\"loading\":true}","viewOptionsMap":{"federate-view":{"app_id":"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c"},"visualization":{"type":"echarts"},"text-widget":{"html":"<body>\n    <!-- Change QueryAll() to a select statement if you do not want all headers in your default frame -->\n    <button class=\"button\" ng-click=\"textWidget.runPixel('Frame () | Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );')\" type=\"button\" style=\"vertical-align:middle\" >\n        <span><i class=\"fa fa-save\"></i></span>\n    </button>\n</body>\n<style>\n    #TextWidget{\n        --button-background-color: #143F5B;\n        --button-text-color: #ffffff;\n    }\n    #TextWidget .button{\n    display: inline-block;\n    border-radius: 4px;\n    background-color: var(--button-background-color);\n    border: none;\n    color: var(--button-text-color);\n    text-align: center;\n    font-size: 20px;\n    padding: 25px;\n    width: 100%;\n    transition: all 0.5s;\n    cursor: pointer;\n    margin: 5px;\n    }\n\n    #TextWidget .button span{\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    transition: 0.5s;\n    }\n\n    #TextWidget .button span:after{\n    content: '\\00bb';\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    right: -20px;\n    transition: 0.5s;\n    }\n\n    #TextWidget .button:hover span{\n    padding-right: 25px;\n    }\n\n    #TextWidget .button:hover span:after{\n    opacity: 1;\n    right: 0;\n    }\n</style>","varList":[{"name":"FrameData","query":"Panel ( 0 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<body>\\n    <!-- Change QueryAll() to a select statement if you do not want all headers in your default frame -->\\n    <button class=\\\"button\\\" ng-click=\\\"textWidget.runPixel('Frame () |  Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );')\\\" type=\\\"button\\\" style=\\\"vertical-align:middle\\\" >\\n        <span>Download</span>\\n    </button>\\n</body>\\n<style>\\n    #TextWidget {\\n        --button-background-color: #143F5B;\\n        --button-text-color: #ffffff;\\n    }\\n    #TextWidget .button{\\n    display: inline-block;\\n    border-radius: 4px;\\n    background-color: var(--button-background-color);\\n    border: none;\\n    color: var(--button-text-color);\\n    text-align: center;\\n    font-size: 28px;\\n    padding: 20px;\\n    width: 100%;\\n    transition: all 0.5s;\\n    cursor: pointer;\\n    margin: 5px;\\n    }\\n\\n    #TextWidget .button span{\\n    cursor: pointer;\\n    display: inline-block;\\n    position: relative;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button span:after{\\n    content: '\\\\00bb';\\n    position: absolute;\\n    opacity: 0;\\n    top: 0;\\n    right: -20px;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button:hover span{\\n    padding-right: 25px;\\n    }\\n\\n    #TextWidget .button:hover span:after{\\n    opacity: 1;\\n    right: 0;\\n    }\\n</style>\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ;"}],"freeze":false,"loading":true}},"config":{"hideBorders":true,"backgroundColor":"#FFFFFF","type":"STANDARD","opacity":100.0,"labelOverride":false,"locked":true,"transparent":true,"zIndex":1.0},"ornaments":{"tools":{"shared":{"backgroundColor":"#FFFFFF","watermark":"","transparentPanel":true}}},"events":{"onSingleClick":{"Unfilter":[{"disabledVisuals":["Grid","Sunburst"],"default":true,"query":"(<Frame> | UnfilterFrame(<SelectedColumn>));","options":{},"refresh":false,"disabled":false,"panel":""}]},"onBrush":{"Filter":[{"default":true,"query":"if((IsEmpty(<SelectedValues>)),(<Frame> | UnfilterFrame(<SelectedColumn>)), (<Frame> | SetFrameFilter(<SelectedColumn>==<SelectedValues>)));","options":{},"refresh":false,"disabled":false,"panel":""}]}},"comments":{},"position":{},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"if ( ( FRAME935726 | HasDuplicates ( job_status ) ) , ( Frame ( frame = [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;","isMeta":false,"output":{"data":{"values":[["Failed",4],["In-progress",3],["Not Started",6],["Queued",1]],"headers":["job_status","Count_of_server_ip"],"rawHeaders":["job_status","Count_of_server_ip"]},"headerInfo":[{"alias":"job_status","header":"job_status","type":"STRING","derived":false},{"alias":"Count_of_server_ip","header":"Count_of_server_ip","calculatedBy":"server_ip","groupBy":["job_status"],"math":"Count","type":"STRING","derived":true}],"sortInfo":[],"numRows":4,"sources":[{"name":"FRAME935726","type":"FRAME"}],"numCollected":2000,"taskOptions":{"0":{"layout":"Pie","alignment":{"heat":[],"tooltip":[],"label":["job_status"],"value":["Count_of_server_ip"],"facet":[]}}},"format":{"type":"TABLE"},"filterInfo":[],"taskId":"task1"},"operationType":["TASK_DATA"]}]}