{
  "layout": "panel",
  "rdbmsId": "4029ae6b-41d4-4bc3-9b1e-7a1277bb5246",
  "hidden": true,
  "insightName": "Validation Report - 1",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelConfig ( config \u003d [ { \"config\" : { \"type\" : \"STANDARD\" , \"opacity\" : 100 } } ] ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003e(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif((IsEmpty(\u003cSelectedValues\u003e)),(\u003cFrame\u003e | UnfilterFrame(\u003cSelectedColumn\u003e)), (\u003cFrame\u003e | SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e)));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"app_id\":\"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\"}\u003c/encode\u003e\" ) ;CreateFrame ( GRID ) .as ( [ \u0027FRAME935726\u0027 ] ) ;Database ( database \u003d [ \"3b3e4a3b-d382-4e98-9950-9b4e8b308c1c\" ] ) | Query ( \"\u003cencode\u003eselect * from server_details sd\nleft outer join (select *\nfrom jobs jb inner join\n(select max(job_start_datetime) as time\nfrom jobs\ngroup by server_id) T on jb.job_start_datetime \u003d T.time\n) jb on jb.server_id \u003d sd.ID and jb.job_type_id \u003d 2\nleft outer join job_type jt on jt.id \u003d jb.job_type_id\nleft outer join job_status js on js.id \u003d jb.job_status_id\u003c/encode\u003e\" ) | Import ( frame \u003d [ FRAME935726 ] ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( frame \u003d [ FRAME935726 ] ) | QueryAll ( ) | AutoTaskOptions ( panel \u003d [ \"0\" ] , layout \u003d [ \"Grid\" ] ) | Collect ( 2000 ) ;FRAME935726 | Convert ( frameType \u003d [ R ] ) .as ( [ \u0027FRAME935726\u0027 ] ) ;Frame ( frame \u003d [ FRAME935726 ] ) | Select ( auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , description , description_1 , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status_id , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , description , description_1 , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status_id , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_by_1\" , \"created_date\" , \"created_date_1\" , \"DATABASE_CREDENTIAL_ID\" , \"description\" , \"description_1\" , \"environment_ID\" , \"event_status_id\" , \"hostname\" , \"ID\" , \"id_1\" , \"id_2\" , \"id_3\" , \"is_delete\" , \"is_deleted\" , \"job_end_datetime\" , \"job_progress\" , \"job_schedule_datetime\" , \"job_start_datetime\" , \"job_status_id\" , \"job_type_id\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_by_1\" , \"modified_date\" , \"modified_date_1\" , \"move_group_id\" , \"operating_system_ID\" , \"output_path\" , \"platform_ID\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_id\" , \"server_ip\" , \"storagetemplate_ID\" , \"time\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ;FRAME935726 | DropRows ( qs \u003d [ Filter ( is_deleted \u003d\u003d \"1\" ) ] ) ;ifError ( ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , description , description_1 , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status_id , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , description , description_1 , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status_id , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_by_1\" , \"created_date\" , \"created_date_1\" , \"DATABASE_CREDENTIAL_ID\" , \"description\" , \"description_1\" , \"environment_ID\" , \"event_status_id\" , \"hostname\" , \"ID\" , \"id_1\" , \"id_2\" , \"id_3\" , \"is_delete\" , \"is_deleted\" , \"job_end_datetime\" , \"job_progress\" , \"job_schedule_datetime\" , \"job_start_datetime\" , \"job_status_id\" , \"job_type_id\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_by_1\" , \"modified_date\" , \"modified_date_1\" , \"move_group_id\" , \"operating_system_ID\" , \"output_path\" , \"platform_ID\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_id\" , \"server_ip\" , \"storagetemplate_ID\" , \"time\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;FRAME935726 | RenameColumn ( column \u003d [ description ] , newCol \u003d [ \"job type\" ] ) ;Frame ( frame \u003d [ FRAME935726 ] ) | QueryAll ( ) | AutoTaskOptions ( panel \u003d [ \"0\" ] , layout \u003d [ \"Grid\" ] ) | Collect ( 2000 ) ;FRAME935726 | RenameColumn ( column \u003d [ description_1 ] , newCol \u003d [ \"job status\" ] ) ;Frame ( frame \u003d [ FRAME935726 ] ) | QueryAll ( ) | AutoTaskOptions ( panel \u003d [ \"0\" ] , layout \u003d [ \"Grid\" ] ) | Collect ( 2000 ) ;FRAME935726 | UpdateRowValues ( job_status , \"Not Started\" , Filter ( job_status \u003d\u003d \"null\" ) ) ;if ( ( FRAME935726 | HasDuplicates ( job_status ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;Frame ( frame \u003d [ FRAME935726 ] ) | Select ( auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_by_1\" , \"created_date\" , \"created_date_1\" , \"DATABASE_CREDENTIAL_ID\" , \"environment_ID\" , \"event_status_id\" , \"hostname\" , \"ID\" , \"id_1\" , \"id_2\" , \"id_3\" , \"is_delete\" , \"is_deleted\" , \"job_end_datetime\" , \"job_progress\" , \"job_schedule_datetime\" , \"job_start_datetime\" , \"job_status\" , \"job_status_id\" , \"job_type\" , \"job_type_id\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_by_1\" , \"modified_date\" , \"modified_date_1\" , \"move_group_id\" , \"operating_system_ID\" , \"output_path\" , \"platform_ID\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_id\" , \"server_ip\" , \"storagetemplate_ID\" , \"time\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ;if ( ( FRAME935726 | HasDuplicates ( job_status ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;Panel ( 0 ) | Clone ( \"1\" ) ;Panel ( 1 ) | SetPanelView ( \"text-widget\" ) ;Panel ( 1 ) | SetPanelView ( \"text-widget\" , \"\u003cencode\u003e{\"html\":\"\u003cbody\u003e\\n    \u003c!-- Change QueryAll() to a select statement if you do not want all headers in your default frame --\u003e\\n    \u003cbutton class\u003d\\\"button\\\" ng-click\u003d\\\"textWidget.runPixel(\u0027Frame () | Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );\u0027)\\\" type\u003d\\\"button\\\" style\u003d\\\"vertical-align:middle\\\" \u003e\\n        \u003cspan\u003eDownload\u003c/span\u003e\\n    \u003c/button\u003e\\n\u003c/body\u003e\\n\u003cstyle\u003e\\n    #TextWidget {\\n        --button-background-color: #143F5B;\\n        --button-text-color: #ffffff;\\n    }\\n    #TextWidget .button{\\n    display: inline-block;\\n    border-radius: 4px;\\n    background-color: var(--button-background-color);\\n    border: none;\\n    color: var(--button-text-color);\\n    text-align: center;\\n    font-size: 20px;\\n    padding: 25px;\\n    width: 100%;\\n    transition: all 0.5s;\\n    cursor: pointer;\\n    margin: 5px;\\n    }\\n\\n    #TextWidget .button span{\\n    cursor: pointer;\\n    display: inline-block;\\n    position: relative;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button span:after{\\n    content: \u0027\\\\00bb\u0027;\\n    position: absolute;\\n    opacity: 0;\\n    top: 0;\\n    right: -20px;\\n    transition: 0.5s;\\n    }\\n\\n    #TextWidget .button:hover span{\\n    padding-right: 25px;\\n    }\\n\\n    #TextWidget .button:hover span:after{\\n    opacity: 1;\\n    right: 0;\\n    }\\n\u003c/style\u003e\",\"varList\":[{\"name\":\"FrameData\",\"query\":\"Panel ( 0 ) | SetPanelView ( \\\"text-widget\\\" , \\\"\u003cencode\u003e{\\\"html\\\":\\\"\u003cbody\u003e\\\\n    \u003c!-- Change QueryAll() to a select statement if you do not want all headers in your default frame --\u003e\\\\n    \u003cbutton class\u003d\\\\\\\"button\\\\\\\" ng-click\u003d\\\\\\\"textWidget.runPixel(\u0027Frame () |  Select ( job_status , UniqueCount ( server_ip ) ) .as ( [ job_status , Unique_Count_of_server_ip ] ) | Group ( job_status ) | ToCsv ( );\u0027)\\\\\\\" type\u003d\\\\\\\"button\\\\\\\" style\u003d\\\\\\\"vertical-align:middle\\\\\\\" \u003e\\\\n        \u003cspan\u003eDownload\u003c/span\u003e\\\\n    \u003c/button\u003e\\\\n\u003c/body\u003e\\\\n\u003cstyle\u003e\\\\n    #TextWidget {\\\\n        --button-background-color: #143F5B;\\\\n        --button-text-color: #ffffff;\\\\n    }\\\\n    #TextWidget .button{\\\\n    display: inline-block;\\\\n    border-radius: 4px;\\\\n    background-color: var(--button-background-color);\\\\n    border: none;\\\\n    color: var(--button-text-color);\\\\n    text-align: center;\\\\n    font-size: 28px;\\\\n    padding: 20px;\\\\n    width: 100%;\\\\n    transition: all 0.5s;\\\\n    cursor: pointer;\\\\n    margin: 5px;\\\\n    }\\\\n\\\\n    #TextWidget .button span{\\\\n    cursor: pointer;\\\\n    display: inline-block;\\\\n    position: relative;\\\\n    transition: 0.5s;\\\\n    }\\\\n\\\\n    #TextWidget .button span:after{\\\\n    content: \u0027\\\\\\\\00bb\u0027;\\\\n    position: absolute;\\\\n    opacity: 0;\\\\n    top: 0;\\\\n    right: -20px;\\\\n    transition: 0.5s;\\\\n    }\\\\n\\\\n    #TextWidget .button:hover span{\\\\n    padding-right: 25px;\\\\n    }\\\\n\\\\n    #TextWidget .button:hover span:after{\\\\n    opacity: 1;\\\\n    right: 0;\\\\n    }\\\\n\u003c/style\u003e\\\",\\\"varList\\\":[{\\\"name\\\":\\\"\\\",\\\"query\\\":\\\"\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}\u003c/encode\u003e\\\" ) ;\"}],\"freeze\":false,\"loading\":true}\u003c/encode\u003e\" ) ;Panel ( 1 ) | SetPanelLabel ( \"\" ) ;Panel ( 0 ) | SetPanelPosition ( { \"top\" : 50 , \"left\" : 0 , \"width\" : 50 , \"height\" : 50 } ) ;Panel ( 1 ) | SetPanelPosition ( { \"top\" : 50 . 134048257372655 , \"left\" : 50 . 0651890482399 , \"width\" : 49 . 934810951760106 , \"height\" : 49 . 865951742627345 } ) ;Frame ( frame \u003d [ FRAME935726 ] ) | Select ( auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_by_1\" , \"created_date\" , \"created_date_1\" , \"DATABASE_CREDENTIAL_ID\" , \"environment_ID\" , \"event_status_id\" , \"hostname\" , \"ID\" , \"id_1\" , \"id_2\" , \"id_3\" , \"is_delete\" , \"is_deleted\" , \"job_end_datetime\" , \"job_progress\" , \"job_schedule_datetime\" , \"job_start_datetime\" , \"job_status\" , \"job_status_id\" , \"job_type\" , \"job_type_id\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_by_1\" , \"modified_date\" , \"modified_date_1\" , \"move_group_id\" , \"operating_system_ID\" , \"output_path\" , \"platform_ID\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_id\" , \"server_ip\" , \"storagetemplate_ID\" , \"time\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ;FRAME935726 | DropRows ( qs \u003d [ Filter ( validation_status_ID \u003d\u003d \"3\" ) ] ) ;ifError ( ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ) .as ( [ auth_profile , business_application , created_by , created_by_1 , created_date , created_date_1 , DATABASE_CREDENTIAL_ID , environment_ID , event_status_id , hostname , ID , id_1 , id_2 , id_3 , is_delete , is_deleted , job_end_datetime , job_progress , job_schedule_datetime , job_start_datetime , job_status , job_status_id , job_type , job_type_id , location , mapping_source_server_ID , modified_by , modified_by_1 , modified_date , modified_date_1 , move_group_id , operating_system_ID , output_path , platform_ID , reparse_requested , report_run_date , report_run_end_date , server_id , server_ip , storagetemplate_ID , time , type , validation_status_ID ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"auth_profile\" , \"business_application\" , \"created_by\" , \"created_by_1\" , \"created_date\" , \"created_date_1\" , \"DATABASE_CREDENTIAL_ID\" , \"environment_ID\" , \"event_status_id\" , \"hostname\" , \"ID\" , \"id_1\" , \"id_2\" , \"id_3\" , \"is_delete\" , \"is_deleted\" , \"job_end_datetime\" , \"job_progress\" , \"job_schedule_datetime\" , \"job_start_datetime\" , \"job_status\" , \"job_status_id\" , \"job_type\" , \"job_type_id\" , \"location\" , \"mapping_source_server_ID\" , \"modified_by\" , \"modified_by_1\" , \"modified_date\" , \"modified_date_1\" , \"move_group_id\" , \"operating_system_ID\" , \"output_path\" , \"platform_ID\" , \"reparse_requested\" , \"report_run_date\" , \"report_run_end_date\" , \"server_id\" , \"server_ip\" , \"storagetemplate_ID\" , \"time\" , \"type\" , \"validation_status_ID\" ] } } } ) | Collect ( 2000 ) ) , ( true ) ) ;if ( ( FRAME935726 | HasDuplicates ( job_status ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame \u003d [ FRAME935726 ] ) | Select ( job_status , Count ( server_ip ) ) .as ( [ job_status , Count_of_server_ip ] ) | Group ( job_status ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"job_status\" ] , \"value\" : [ \"Count_of_server_ip\" ] , \"heat\" : [ ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;Panel ( 0 ) | SetPanelLabel ( \"Discovery Status\" ) ;Panel(0)|SetPanelPosition({\"top\":50,\"left\":0,\"width\":50,\"height\":50});Panel(1)|SetPanelPosition({\"top\":50.134048257372655,\"left\":50.0651890482399,\"width\":49.934810951760106,\"height\":49.865951742627345});",
  "engineId": "3b3e4a3b-d382-4e98-9950-9b4e8b308c1c"
}